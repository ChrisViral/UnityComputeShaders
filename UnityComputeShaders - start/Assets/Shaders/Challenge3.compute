// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

Texture2D<float4> source;
RWTexture2D<float4> output;
float shade;
float edge;
float tintHeight;
float4 tintColour;
float tintStrength;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    uint2 size;
    source.GetDimensions(size.x, size.y);
    const float2 uv = id.xy / (float2)size;
    const float4 base   = source[id.xy];

    const float inStrip = 1 - smoothstep(tintHeight - edge, tintHeight , uv.y);
    const float4 shaded = source[id.xy] * (1 - shade);

    const float grayscale = (shaded.r + shaded.g + shaded.b) / 3;
    float3 tinted = tintColour.rgb * grayscale;
    tinted = lerp(shaded, tinted, tintStrength);

    const float4 colour = lerp(base, float4(tinted, base.a), inStrip);

    output[id.xy] = colour;
}